name: Lingmo OS Autobuild

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:12

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        # Set frontend to noninteractive to avoid debconf warnings
        export DEBIAN_FRONTEND=noninteractive
        apt-get install -y wget jq dpkg curl extra-cmake-modules libkf5configwidgets-dev libkf5i18n-dev libkf5config-dev libkf5iconthemes-dev libkf5guiaddons-dev rsync autoconf automake live-build file
      env:
        DEBIAN_FRONTEND: noninteractive

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        apt-get update
        apt-get install -y gh
      env:
        DEBIAN_FRONTEND: noninteractive

    - name: Install Lingmo build tool
      run: |
        wget https://packages.lingmo.org/lingmo/pool/main/l/lingmo-pkgbuild/lingmo-pkgbuild_0.1.0-1~lingmo1_amd64.deb
        wget https://packages.lingmo.org/lingmo/pool/main/libl/liblingmo/liblingmo_1.10.1_amd64.deb
        apt install -y ./*.deb
        apt-get install -f
      env:
        DEBIAN_FRONTEND: noninteractive

    - name: Create packages
      run: |
        echo "deb-src http://deb.debian.org/debian bookworm main contrib non-free" | tee -a /etc/apt/sources.list
        apt update && apt build-dep apt -y
        mkdir -p buildpkg && mkdir -p buildpkg_tp
        
        # Only run autoreconf if configure.ac exists
        if [ -f configure.ac ] || [ -f configure.in ]; then
          autoreconf -fiv
          ./configure
        fi
        
        make pkg_all
        make image-iso
      env:
        DEBIAN_FRONTEND: noninteractive

    - name: Move files and compress directory
      run: |
        mv pkg_out release

    - name: Create release tarball
      run: |
        tar -cJf release.tar.xz -C release .

    - name: Set Release Tag
      id: set_tag
      run: echo "TAG_NAME=3.0.0-rc9-build-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create Release and Upload Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create release
        gh release create "${{ env.TAG_NAME }}" \
          --title "Release ${{ env.TAG_NAME }}" \
          --notes "Automated build for Lingmo OS" \
          release.tar.xz
        
        # Upload individual files from release directory
        for file in release/*; do
          if [ -f "$file" ]; then
            echo "Uploading $(basename "$file")"
            gh release upload "${{ env.TAG_NAME }}" "$file"
          fi
        done
